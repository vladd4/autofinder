version: '3.8'

services:
  db:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: five
    volumes:
      - mysql-data:/var/lib/mysql
      - ./init:/docker-entrypoint-initdb.d
    ports:
      - "3307:3306"
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot"]
      interval: 10s
      timeout: 5s
      retries: 5

  frontend:
    container_name: frontend
    build:
      context: ./client
      dockerfile: Dockerfile
    environment:
      NODE_ENV: production
    ports:
      - "3000:3000"
    expose:
      - "3000"
    depends_on:
      - backend

  backend:
    container_name: backend
    env_file:
        - ./server/.env
    build:
      context: ./server
      dockerfile: Dockerfile
    environment:
      MYSQL_HOST: db
      MYSQL_PORT: 3307
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: five
    ports:
      - "5000:5000"
    expose:
      - "5000"
    depends_on:
      - db

  adminer:
    image: adminer:latest
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      - db

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - nginx-data:/var/www/certbot
      - certbot-etc:/etc/letsencrypt
      - ~/dhparam.pem:/etc/nginx/dhparam.pem
    ports:
      - "80:80"
    depends_on:
     - backend

  certbot:
    image: certbot/certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - nginx-data:/var/www/certbot


volumes:
  mysql-data:
  nginx-data:
  certbot-etc: